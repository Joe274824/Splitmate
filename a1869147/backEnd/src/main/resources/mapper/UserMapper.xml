<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SplitMate.mapper.UserMapper">
    <resultMap id="UserResultMap" type="SplitMate.domain.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="userType" column="user_type"/>
        <result property="userPhoneId" column="user_phone_id"/>
    </resultMap>

    <select id="getAllUsers" resultMap="UserResultMap">
        SELECT * FROM user
    </select>

    <select id="getUserById" parameterType="Long" resultMap="UserResultMap">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <insert id="insertUser" parameterType="SplitMate.domain.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, email, password, status, created_at, user_type, user_phone_id)
        VALUES (#{username}, #{email}, #{password}, #{status}, #{createdAt}, #{userType}, #{userPhoneId})
    </insert>

    <update id="updateUser" parameterType="SplitMate.domain.User">
        UPDATE user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="email != null">email = #{email},</if>
            <if test="password != null">password = #{password},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="userPhoneId != null">user_phone_id = #{userPhoneId}</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="deleteUser" parameterType="Long">
        UPDATE status = {delete} FROM user WHERE id = #{id}
    </update>

    <select id="findByUsername" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM user WHERE username = #{username}
    </select>

    <select id="findByEmail" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM user WHERE email = #{email}
    </select>

</mapper>